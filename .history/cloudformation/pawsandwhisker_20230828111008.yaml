AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template to create a VPC, Subnets, and EC2 instance

Parameters:
  Region:
    Description: AWS Region to deploy resources
    Type: String
    Default: us-east-2
    AllowedValues:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      # Add more regions as needed
    ConstraintDescription: Must be a valid AWS region name

  #ami-0773d5f16c0189a6c -us-east-2 ami.
  AmiId:
    Description: ID of the Amazon Machine Image (AMI) to use for the EC2 instance
    Type: String
    Default: ami-0cf0e376c672104d6

  KeyPairName:
    Description: Name of the existing EC2 key pair to use
    Type: String
    Default: pawsandwhiskersKey

  AZ: 
    Description: Name of the existing EC2 key pair to use
    Type: String
    Default: us-east-2a

Resources:
  PawsAndWhiskers:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: PawsAndWhiskers
          
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref PawsAndWhiskers
      InternetGatewayId: !Ref InternetGateway 

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PawsAndWhiskers
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Ref AZ
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref PawsAndWhiskers

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2 instance
      VpcId: !Ref PawsAndWhiskers
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0 # Adjust this CIDR to your trusted IP range for SSH access
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyPairName
      ImageId: !Ref AmiId
      SubnetId: !Ref PublicSubnet1
      SecurityGroups: 
      - !Ref InstanceSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          echo "Hello from UserData script!"
          apt-get update
          apt-get install -y git
          git clone https://github.com/vimala-pydi/pawsandwhiskers.git
          cd repo
          chmod +x deploy.sh
          ./deploy.sh
Outputs:
  PublicDNSName:
    Description: Public DNS name of the EC2 instance
    Value: !GetAtt EC2Instance.PublicDnsName